<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Coder</title>
    <url>/2016/10/12/1/</url>
    <content><![CDATA[<p>身为一个Coder小菜鸟，喜欢捣鼓些喜欢的东西。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>second</title>
    <url>/2022/04/02/2/</url>
    <content><![CDATA[<p>这个是第二篇哦！</p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>其实真的有人好好爱过你</title>
    <url>/2022/04/02/3/</url>
    <content><![CDATA[<p>遗憾也值得吧。</p>
]]></content>
  </entry>
  <entry>
    <title>xxx已损坏，无法打开，您应该将它移到废纸篓 / 无法打开xxx，因为它来自身份不明的开发者</title>
    <url>/2022/04/20/xxx%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%EF%BC%8C%E6%82%A8%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93-%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80xxx%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%9D%A5%E8%87%AA%E8%BA%AB%E4%BB%BD%E4%B8%8D%E6%98%8E%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85/</url>
    <content><![CDATA[<p>参考原文：<a href="https://www.seemac.cn/258.html">https://www.seemac.cn/258.html</a></p>
<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>常见报错一：无法打开xxx，因为 Apple 无法检查其是否包含恶意软件&#x2F;因为它来自身份不明的开发者&#x2F;因为无法验证开发者（鼠标右键应用再点击打开即可）<br>常见报错二：xxx已损坏，无法打开，您应该将它移到废纸篓（往下看）</p>
<h1 id="出现的原因"><a href="#出现的原因" class="headerlink" title="出现的原因"></a>出现的原因</h1><p>这是因为 mac 启用了新的安全机制</p>
<p>苹果默认是只允许安装自家「App Store」来源的应用，如果你想安装第三方的，那么需要在 系统偏好设置 -&gt; 安全性与隐私 -&gt; 通用 中勾选「App Store 和被认可的开发者」选项，而被认可的开发者是需要购买苹果的企业证书对应用进行签名，然后再提交给苹果审核才可以的，这一点对破解应用来说很不现实，因为破解应用必定会修改应用的文件，从而导致签名失效。</p>
<p>解决方法就是要开启「任何来源」选项，但是 mac 默认是隐藏了这个选项的，需要手动通过终端执行命令行代码来开启。</p>
<h1 id="开启「任何来源」选项"><a href="#开启「任何来源」选项" class="headerlink" title="开启「任何来源」选项"></a>开启「任何来源」选项</h1><p>先打开 系统偏好设置 -&gt; 安全与隐私 -&gt; 通用 选项卡，检查是否已经启用了「任何来源」选项。如果没有启用，先点击左下角的小黄锁?图标解锁，然后选中任何来源。</p>
<p>注意！如果没有「任何来源」选项，我们打开终端（command+空格 聚焦搜索 终端），复制以下命令粘贴到终端：</p>
<p>sudo spctl –master-disable</p>
<p>然后按下回车键，出现钥匙图标后输入电脑的开机密码（输入过程中密码是看不到的）输入完成后再按下回车键即可。现在回到 系统偏好设置 -&gt; 安全性与隐私 -&gt; 通用 里，就会发现已选中任何来源选项了。</p>
<p>到这里一般情况下应用都可以运行了</p>
<p>然而有的应用，尤其是游戏开启了任何来源还是不行，这是因为苹果进一步收缩了对未签名应用的权限，这时候就需要通过终端执行命令行代码来绕过应用签名认证就可以了。</p>
<h1 id="绕过公证Gatekeeper（移除这个应用的安全隔离属性）"><a href="#绕过公证Gatekeeper（移除这个应用的安全隔离属性）" class="headerlink" title="绕过公证Gatekeeper（移除这个应用的安全隔离属性）"></a>绕过公证Gatekeeper（移除这个应用的安全隔离属性）</h1><p>打开终端，复制以下命令粘贴到终端：<br>sudo xattr -rd com.apple.quarantine<br>注意最后quarantine 后面加一个空格！然后打开Finder（访达），点击左侧的 应用程序，找到相关应用，拖进终端quarantine 的后面，然后按下回车键，出现钥匙图标后输入电脑的开机密码（输入过程中密码是看不到的）输入完成后再按下回车键即可。</p>
<p>到这里游戏都可以运行了</p>
<p>然而部分应用还是不行的话，那就需要对应用进行本地签名了</p>
<h1 id="应用签名"><a href="#应用签名" class="headerlink" title="应用签名"></a>应用签名</h1><p>先安装Command Line Tools 工具，打开终端，复制以下命令粘贴到终端：<br>xcode-select –install</p>
<p>弹出安装窗口后选择安装，安装过程需要几分钟，请耐心等待。</p>
<p>安装完成后对应用进行签名，复制以下命令粘贴到终端：<br>sudo codesign –force –deep –sign -</p>
<p>然后打开Finder（访达），点击左侧的 应用程序，找到相关应用，拖进终端– 的后面，注意最后– 后面有一个空格！然后按下回车键，出现钥匙图标?后输入电脑的开机密码（输入过程中密码是看不到的）输入完成后再按下回车键即可。</p>
<p>正常情况下只有一行提示，即成功：</p>
<p>&#x2F;文件位置 : replacing existing signature</p>
<p>如遇如下错误：</p>
<p>&#x2F;文件位置 : replacing existing signature<br>&#x2F;文件位置 : resource fork,Finder information,or similar det</p>
<p>先在终端执行：</p>
<p>xattr -cr 应用路径（直接将应用拖进去即可）<br>然后再次执行如下指令即可：</p>
<p>codesign –force –deep –sign - 应用路径（直接将应用拖进去即可）<br>到这儿，百分之九十五的应用都可以正常运行了。如果还不行，请继续往下看。</p>
<h1 id="关闭SIP"><a href="#关闭SIP" class="headerlink" title="关闭SIP"></a>关闭SIP</h1><p>以上操作如果还不能解决，那就需要关闭SIP系统完整性保护才可以了！点我查看</p>
]]></content>
      <categories>
        <category>MAC使用问题</category>
      </categories>
  </entry>
  <entry>
    <title>poi单元格合并相同的列</title>
    <url>/2022/06/02/poi%E5%8D%95%E5%85%83%E6%A0%BC%E5%90%88%E5%B9%B6%E7%9B%B8%E5%90%8C%E7%9A%84%E5%88%97/</url>
    <content><![CDATA[<p>java poi excel合并单元格 相同的列以及在有父级约束条件下合并二级列</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.poi.ss.usermodel.Sheet;</span><br><span class="line"><span class="keyword">import</span> org.apache.poi.ss.util.CellRangeAddress;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelHelper</span> &#123;</span><br><span class="line">    <span class="comment">/**合并单元格，合并相同的列</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startRow 开始行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mergeRow 需要合并的列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> i 用于计数 ，和startRow值相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(Sheet sheet, <span class="type">int</span> startRow, <span class="type">int</span> mergeRow, <span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">startText</span> <span class="operator">=</span> sheet.getRow(startRow).getCell(mergeRow).toString();</span><br><span class="line">        <span class="keyword">while</span>(sheet.getRow(i)!=<span class="literal">null</span>&amp;&amp;sheet.getRow(i).getCell(mergeRow)!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sheet.getRow(i).getCell(mergeRow)!=<span class="literal">null</span></span><br><span class="line">                &amp;&amp;!sheet.getRow(i).getCell(mergeRow).toString().equals(startText))&#123;</span><br><span class="line">                <span class="comment">//合并单元格</span></span><br><span class="line">                sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(startRow,i-<span class="number">1</span>,mergeRow,mergeRow));</span><br><span class="line">                startText = sheet.getRow(i).getCell(mergeRow).getStringCellValue();</span><br><span class="line">                startRow = i;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//尾部处理</span></span><br><span class="line">        <span class="keyword">if</span>(startRow!=i)&#123;</span><br><span class="line">            sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(startRow,i-<span class="number">1</span>,mergeRow,mergeRow));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**合并单元格，存在父级对二级列合并的情况</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startRow 开始行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mergeRow 需要合并的列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mergeParentRow 需要合并的列的父级</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> i 用于计数 ，和startRow值相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mergeByParent</span><span class="params">(Sheet sheet, <span class="type">int</span> startRow, <span class="type">int</span> mergeRow,<span class="type">int</span> mergeParentRow,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">startText</span> <span class="operator">=</span> sheet.getRow(startRow).getCell(mergeRow).toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">startParentText</span> <span class="operator">=</span> sheet.getRow(startRow).getCell(mergeParentRow).toString();</span><br><span class="line">        <span class="keyword">while</span>(sheet.getRow(i)!=<span class="literal">null</span>&amp;&amp;sheet.getRow(i).getCell(mergeRow)!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sheet.getRow(i).getCell(mergeRow)==<span class="literal">null</span></span><br><span class="line">                    ||!sheet.getRow(i).getCell(mergeRow).toString().equals(startText)</span><br><span class="line">                    ||!sheet.getRow(i).getCell(mergeParentRow).toString().equals(startParentText))&#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=startRow)&#123;</span><br><span class="line">                    <span class="comment">//合并单元格</span></span><br><span class="line">                    sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(startRow,i-<span class="number">1</span>,mergeRow,mergeRow));</span><br><span class="line">                &#125;</span><br><span class="line">                startText = sheet.getRow(i).getCell(mergeRow).getStringCellValue();</span><br><span class="line">                startParentText = sheet.getRow(i).getCell(mergeParentRow).getStringCellValue();</span><br><span class="line">                startRow = i;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//尾部处理</span></span><br><span class="line">        <span class="keyword">if</span>(startRow!=i)&#123;</span><br><span class="line">            sheet.addMergedRegion(<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(startRow,i-<span class="number">1</span>,mergeRow,mergeRow));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
  </entry>
  <entry>
    <title>SQL处理问题集合</title>
    <url>/2022/06/02/SQL%E5%A4%84%E7%90%86%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h4 id="1、sql多条记录获取最新的一条-其中depnum为部门编号，create为记录创建时间"><a href="#1、sql多条记录获取最新的一条-其中depnum为部门编号，create为记录创建时间" class="headerlink" title="1、sql多条记录获取最新的一条,  其中depnum为部门编号，create为记录创建时间"></a>1、sql多条记录获取最新的一条,  其中depnum为部门编号，create为记录创建时间</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">select c.* form A c inner <span class="title function_">join</span> <span class="params">(</span></span><br><span class="line"><span class="params">    select depnum,max(createdate)</span> as createdate from A group by depnum) d on A.depnum = d.depnum and c.createdate = d.createdate</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="2、分类统计金额"><a href="#2、分类统计金额" class="headerlink" title="2、分类统计金额"></a>2、分类统计金额</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sum(</span><br><span class="line">    (<span class="keyword">case</span> <span class="title function_">when</span><span class="params">(<span class="number">1</span>=<span class="number">1</span> 这里是条件)</span></span><br><span class="line">    then (</span><br><span class="line">        amount</span><br><span class="line">    ) <span class="keyword">else</span> <span class="number">0</span> end)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="3、oracle取整"><a href="#3、oracle取整" class="headerlink" title="3、oracle取整"></a>3、oracle取整</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">round(num,<span class="number">0</span>)  四舍五入</span><br><span class="line">trunc(num,<span class="number">0</span>)  直接截取</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SQL</category>
      </categories>
  </entry>
  <entry>
    <title>心情2022.01.06</title>
    <url>/2023/01/06/%E5%BF%83%E6%83%852022-01-06/</url>
    <content><![CDATA[<p>我想我也不会特别不快乐<br>只是没有朋友，没有爱与被爱</p>
<p>没有任何的期待<br>任何人的出现只是一种消耗<br>他们不是来爱我的，我应该明白<br>我更多的可以选择和快乐的人玩</p>
<p>浑浑噩噩一年又过去了<br>回首这一年是真的很失败的<br>最近真的特别特别累</p>
<p>等我想好写什么了再继续写吧</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>websphere服务搭建</title>
    <url>/2023/02/20/websphere%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>1、把文件夹打包称war包命令<br>jar -cvf test.war *</p>
<p>2、进入websphere控制台<br>https:&#x2F;&#x2F;<em>.</em>.<em>.</em>:9043&#x2F;ibm&#x2F;console&#x2F;logon.jsp</p>
<p>3、输入用户名，密码，点击登陆</p>
<p>4、在环境——&gt;共享库下，选择作用域“节点&#x3D;localhostNode01，服务器&#x3D;server1”，点击“新建”按钮</p>
<p>5、填写名称：mylib<br>类路径：<br>&#x2F;opt&#x2F;IBM&#x2F;WebSphere&#x2F;AppServer&#x2F;profiles&#x2F;AppSrv01&#x2F;installedApps&#x2F;ybtapp1Node01Cell&#x2F;nbybt_war.ear&#x2F;nbybt.war&#x2F;WEB-INF&#x2F;lib&#x2F;poi-3.10-FINAL-20140208.jar</p>
<p>6、点击确定后保存</p>
<p>7、点击左侧菜单栏：服务器——&gt;服务器类型——&gt;websphere application server,选择server1</p>
<p>8、选择 服务器基础结构——&gt;JAVA进程与管理——&gt;类装入器</p>
<p>9、点击新建</p>
<p>10、点击确认按钮，并保存配置</p>
<p>11、进入，点击“Classloader_140618******”</p>
<p>12、选择共享库yin yong4</p>
<p>13、点击添加按钮</p>
<p>14、选择mylib，点击确认，然后保存</p>
<p>15、点击左菜单栏：应用程序——&gt;应用程序类型——&gt;WebSphere企业应用程序</p>
<p>16、点击“安装”按钮，选择本地war包，点击“下一步”</p>
<p>17、点击下一步</p>
<p>18、点击下一步</p>
<p>19、点击下一步</p>
<p>20、点击下一步</p>
<p>21、在上下文根下面鞋“&#x2F;ybt”，点击下一步</p>
<p>22、点击下一步</p>
<p>23、点击“保存”选项</p>
<p>24、启动应用</p>
<p>26、修改系统字符信息<br> cd &#x2F;etc&#x2F;sysconfig<br> vi i18n<br> 将内容修改为： LANG&#x3D;”zh_CN.GB18030”</p>
<p> 27、增加命令别名<br> unset i<br> unset pathmunge</p>
<p> alias cdlog&#x3D;’cd &#x2F;home&#x2F;***’</p>
<p> 28、sftp配置方式<br> 确认应用服务器是否安装sftp（ssh）：执行 rpm -q openssh<br> 在服务器上生成密钥对：<br> &#x2F;home&#x2F;was&#x2F;.ssh路径（用什么用户安装sftp，.ssh目录就在这个用户的主目录下）下执行：<br> ssh-keygen -b 2048 -t rsa -f id_rsa<br> 出险的提示框直接回车，生成id_rsa（私钥）、id_rsa.pub（公钥），复制公钥内容已备使用</p>
<p> 登陆前置机的&#x2F;root&#x2F;.ssh 路径下创建authorized_keys 文件（如果是非root用户，则需要用root用户在该用户的主目录下建立.ssh目录和authorized_keys文件），<br> vi authorized_keys，将客户端生成的公钥赋值过去</p>
<p> 修改完后，应用服务器执行 sftp root@<em>.</em>.<em>.</em> 验证sftp连通性</p>
<p> 第一次登陆输入yes，以后就不用，会直接登陆到服务器</p>
<p> 注意：  home目录和.ssh目录权限必须为755或700<br>        id_rsa.pub权限必须为644<br>        id_rsa权限必须为600<br>        authorized_keys权限为vi自动生成权限 ，644或640</p>
<p>29、应用服务器启停<br>manager启停<br>cd &#x2F;was&#x2F;Dmgr01&#x2F;bin<br>.&#x2F;stopManager.sh<br>.&#x2F;startManager.sh</p>
<p>node启停<br>cd &#x2F;was&#x2F;AppSrv01&#x2F;bin<br>.&#x2F;stopNode.sh<br>.&#x2F;startNode.sh</p>
<p>server启停<br>cd &#x2F;was&#x2F;AppSrv01&#x2F;bin<br>.&#x2F;stopServer.sh server1<br>.&#x2F;startServer.sh server1</p>
]]></content>
  </entry>
</search>
