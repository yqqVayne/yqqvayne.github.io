<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Coder</title>
    <url>/2016/10/12/1/</url>
    <content><![CDATA[<p>身为一个Coder小菜鸟，喜欢捣鼓些喜欢的东西。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>second</title>
    <url>/2022/04/02/2/</url>
    <content><![CDATA[<p>这个是第二篇哦！</p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>其实真的有人好好爱过你</title>
    <url>/2022/04/02/3/</url>
    <content><![CDATA[<p>遗憾也值得吧。</p>
]]></content>
  </entry>
  <entry>
    <title>xxx已损坏，无法打开，您应该将它移到废纸篓 / 无法打开xxx，因为它来自身份不明的开发者</title>
    <url>/2022/04/20/xxx%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%EF%BC%8C%E6%82%A8%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93-%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80xxx%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E6%9D%A5%E8%87%AA%E8%BA%AB%E4%BB%BD%E4%B8%8D%E6%98%8E%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85/</url>
    <content><![CDATA[<p>参考原文：<a href="https://www.seemac.cn/258.html">https://www.seemac.cn/258.html</a></p>
<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>常见报错一：无法打开xxx，因为 Apple 无法检查其是否包含恶意软件&#x2F;因为它来自身份不明的开发者&#x2F;因为无法验证开发者（鼠标右键应用再点击打开即可）<br>常见报错二：xxx已损坏，无法打开，您应该将它移到废纸篓（往下看）</p>
<h1 id="出现的原因"><a href="#出现的原因" class="headerlink" title="出现的原因"></a>出现的原因</h1><p>这是因为 mac 启用了新的安全机制</p>
<p>苹果默认是只允许安装自家「App Store」来源的应用，如果你想安装第三方的，那么需要在 系统偏好设置 -&gt; 安全性与隐私 -&gt; 通用 中勾选「App Store 和被认可的开发者」选项，而被认可的开发者是需要购买苹果的企业证书对应用进行签名，然后再提交给苹果审核才可以的，这一点对破解应用来说很不现实，因为破解应用必定会修改应用的文件，从而导致签名失效。</p>
<p>解决方法就是要开启「任何来源」选项，但是 mac 默认是隐藏了这个选项的，需要手动通过终端执行命令行代码来开启。</p>
<h1 id="开启「任何来源」选项"><a href="#开启「任何来源」选项" class="headerlink" title="开启「任何来源」选项"></a>开启「任何来源」选项</h1><p>先打开 系统偏好设置 -&gt; 安全与隐私 -&gt; 通用 选项卡，检查是否已经启用了「任何来源」选项。如果没有启用，先点击左下角的小黄锁?图标解锁，然后选中任何来源。</p>
<p>注意！如果没有「任何来源」选项，我们打开终端（command+空格 聚焦搜索 终端），复制以下命令粘贴到终端：</p>
<p>sudo spctl –master-disable</p>
<p>然后按下回车键，出现钥匙图标后输入电脑的开机密码（输入过程中密码是看不到的）输入完成后再按下回车键即可。现在回到 系统偏好设置 -&gt; 安全性与隐私 -&gt; 通用 里，就会发现已选中任何来源选项了。</p>
<p>到这里一般情况下应用都可以运行了</p>
<p>然而有的应用，尤其是游戏开启了任何来源还是不行，这是因为苹果进一步收缩了对未签名应用的权限，这时候就需要通过终端执行命令行代码来绕过应用签名认证就可以了。</p>
<h1 id="绕过公证Gatekeeper（移除这个应用的安全隔离属性）"><a href="#绕过公证Gatekeeper（移除这个应用的安全隔离属性）" class="headerlink" title="绕过公证Gatekeeper（移除这个应用的安全隔离属性）"></a>绕过公证Gatekeeper（移除这个应用的安全隔离属性）</h1><p>打开终端，复制以下命令粘贴到终端：<br>sudo xattr -rd com.apple.quarantine<br>注意最后quarantine 后面加一个空格！然后打开Finder（访达），点击左侧的 应用程序，找到相关应用，拖进终端quarantine 的后面，然后按下回车键，出现钥匙图标后输入电脑的开机密码（输入过程中密码是看不到的）输入完成后再按下回车键即可。</p>
<p>到这里游戏都可以运行了</p>
<p>然而部分应用还是不行的话，那就需要对应用进行本地签名了</p>
<h1 id="应用签名"><a href="#应用签名" class="headerlink" title="应用签名"></a>应用签名</h1><p>先安装Command Line Tools 工具，打开终端，复制以下命令粘贴到终端：<br>xcode-select –install</p>
<p>弹出安装窗口后选择安装，安装过程需要几分钟，请耐心等待。</p>
<p>安装完成后对应用进行签名，复制以下命令粘贴到终端：<br>sudo codesign –force –deep –sign -</p>
<p>然后打开Finder（访达），点击左侧的 应用程序，找到相关应用，拖进终端– 的后面，注意最后– 后面有一个空格！然后按下回车键，出现钥匙图标?后输入电脑的开机密码（输入过程中密码是看不到的）输入完成后再按下回车键即可。</p>
<p>正常情况下只有一行提示，即成功：</p>
<p>&#x2F;文件位置 : replacing existing signature</p>
<p>如遇如下错误：</p>
<p>&#x2F;文件位置 : replacing existing signature<br>&#x2F;文件位置 : resource fork,Finder information,or similar det</p>
<p>先在终端执行：</p>
<p>xattr -cr 应用路径（直接将应用拖进去即可）<br>然后再次执行如下指令即可：</p>
<p>codesign –force –deep –sign - 应用路径（直接将应用拖进去即可）<br>到这儿，百分之九十五的应用都可以正常运行了。如果还不行，请继续往下看。</p>
<h1 id="关闭SIP"><a href="#关闭SIP" class="headerlink" title="关闭SIP"></a>关闭SIP</h1><p>以上操作如果还不能解决，那就需要关闭SIP系统完整性保护才可以了！点我查看</p>
]]></content>
      <categories>
        <category>MAC使用问题</category>
      </categories>
  </entry>
  <entry>
    <title>poi单元格合并相同的列</title>
    <url>/2022/06/02/poi%E5%8D%95%E5%85%83%E6%A0%BC%E5%90%88%E5%B9%B6%E7%9B%B8%E5%90%8C%E7%9A%84%E5%88%97/</url>
    <content><![CDATA[<p>import org.apache.poi.ss.usermodel.Sheet;<br>import org.apache.poi.ss.util.CellRangeAddress;</p>
<p>public class ExcelHelper {<br>    &#x2F;**合并单元格，合并相同的列<br>     *<br>     * @param sheet<br>     * @param startRow 开始行<br>     * @param mergeRow 需要合并的列<br>     * @param i 用于计数 ，和startRow值相同<br>     *&#x2F;<br>    public void merge(Sheet sheet, int startRow, int mergeRow, int i){<br>        String startText &#x3D; sheet.getRow(startRow).getCell(mergeRow).toString();<br>        while(sheet.getRow(i)!&#x3D;null&amp;&amp;sheet.getRow(i).getCell(mergeRow)!&#x3D;null){<br>            if(sheet.getRow(i).getCell(mergeRow)!&#x3D;null<br>                &amp;&amp;!sheet.getRow(i).getCell(mergeRow).toString().equals(startText)){<br>                &#x2F;&#x2F;合并单元格<br>                sheet.addMergedRegion(new CellRangeAddress(startRow,i-1,mergeRow,mergeRow));<br>                startText &#x3D; sheet.getRow(i).getCell(mergeRow).getStringCellValue();<br>                startRow &#x3D; i;<br>            }<br>            i++;<br>        }</p>
<pre><code>    //尾部处理
    if(startRow!=i)&#123;
        sheet.addMergedRegion(new CellRangeAddress(startRow,i-1,mergeRow,mergeRow));
    &#125;
&#125;

/**合并单元格，存在父级对二级列合并的情况
 *
 * @param sheet
 * @param startRow 开始行
 * @param mergeRow 需要合并的列
 * @param mergeParentRow 需要合并的列的父级
 * @param i 用于计数 ，和startRow值相同
 */
public void mergeByParent(Sheet sheet, int startRow, int mergeRow,int mergeParentRow,int i)&#123;
    String startText = sheet.getRow(startRow).getCell(mergeRow).toString();
    String startParentText = sheet.getRow(startRow).getCell(mergeParentRow).toString();
    while(sheet.getRow(i)!=null&amp;&amp;sheet.getRow(i).getCell(mergeRow)!=null)&#123;
        if(sheet.getRow(i).getCell(mergeRow)==null
                ||!sheet.getRow(i).getCell(mergeRow).toString().equals(startText)
                ||!sheet.getRow(i).getCell(mergeParentRow).toString().equals(startParentText))&#123;
            if(i!=startRow)&#123;
                //合并单元格
                sheet.addMergedRegion(new CellRangeAddress(startRow,i-1,mergeRow,mergeRow));
            &#125;
            startText = sheet.getRow(i).getCell(mergeRow).getStringCellValue();
            startParentText = sheet.getRow(i).getCell(mergeParentRow).getStringCellValue();
            startRow = i;
        &#125;
        i++;
    &#125;

    //尾部处理
    if(startRow!=i)&#123;
        sheet.addMergedRegion(new CellRangeAddress(startRow,i-1,mergeRow,mergeRow));
    &#125;
&#125;
</code></pre>
<p>}</p>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
  </entry>
</search>
